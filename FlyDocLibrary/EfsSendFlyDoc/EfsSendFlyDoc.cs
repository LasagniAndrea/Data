using System;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Net.Mime;
using System.Text;
//
using System.Xml.Serialization;
//
using EFS.ACommon;

namespace EFS.Common.EfsSend
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     Ce code a été généré par un outil.
    //     Version du runtime :2.0.50727.1433
    //
    //     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
    //     le code est régénéré.
    // </auto-generated>
    //------------------------------------------------------------------------------
        
    // 
    // This source code was auto-generated by xsd, Version=2.0.50727.42.
    //
    // It was modified manually
    //

    #region Enums 
    /// <remarks/>
    public enum EfsSendFDCryptedEnum
    {
        /// <remarks/>
        yes,

        /// <remarks/>
        no,
    }

    /// <remarks/>
    public enum EfsSendFDTransportNameEnum
    {
        /// <remarks/>
        Sms,

        /// <remarks/>
        Mail,

        /// <remarks/>
        Fax,
    }
    #endregion
    //
    #region class EfsSendFlyDoc 
    /// <remarks/>
    [XmlRoot(ElementName = "WebService", IsNullable = true)]
    public partial class EfsSendFlyDoc
    {
        #region Members 
        private string name;
        private EfsSendFDLogin login;
        private EfsSendFDTransportNameEnum transportName;
        private EfsSendFDMessage message;
        #endregion
        #region Accessors 
        /// <remarks/>
        [XmlElementAttribute("Name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                this.name = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute("Login", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDLogin Login
        {
            get
            {
                return this.login;
            }
            set
            {
                this.login = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute("TransportName", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDTransportNameEnum TransportName
        {
            get
            {
                return this.transportName;
            }
            set
            {
                this.transportName = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute("Message", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDMessage Message
        {
            get
            {
                return this.message;
            }
            set
            {
                this.message = value;
            }
        }
        #endregion 
        //
        #region Methods 
        #region SendFlyDoc
        // EG 20180423 Analyse du code Correction [CA2200]
        public Cst.ErrLevel SendFlyDoc(ref Nullable<int> pTransportID, ref int pState, ref string pStatus, ref string pDate, ref string pUrl, ref string pError)
        {
            Cst.ErrLevel lRet = Cst.ErrLevel.SUCCESS;
            //
            try
            {
                bool isTracking = false;
                //                        
                switch (transportName)
                {
                    case EfsSendFDTransportNameEnum.Fax:
                        string url = "https://as1.ondemand.esker.com/ondemand/webaccess/40/document.aspx?id=FGFaxOut.opTransportID";
                        //
                        FlyDocLibrary.SendFax sendFax = new FlyDocLibrary.SendFax();
                        bool ret = sendFax.Run(this, isTracking, out pTransportID, out pState, out pStatus, out pDate, out pError);
                        //
                        if (false == ret)
                            lRet = Cst.ErrLevel.FLYDOCNOTSENT;
                        //
                        pUrl = (pTransportID > 0 ? url.Replace("opTransportID", pTransportID.ToString()) : string.Empty);
                        //
                        break;

                    case EfsSendFDTransportNameEnum.Mail:
                        //
                        // ToDo
                        //
                        throw new Exception("Method EFS.Common.EfsSend.EfsSendFlyDoc.SendFlyDoc() don't manage Mail send via FlyDoc.");
                
                    case EfsSendFDTransportNameEnum.Sms:
                        //
                        // ToDo
                        //
                        throw new Exception("Method EFS.Common.EfsSend.EfsSendFlyDoc.SendFlyDoc() don't manage SMS send via FlyDoc.");                
                }
                //
                return lRet;
            }
            catch (Exception) { throw; }
        }
        #endregion SendEmail  
        #endregion
    }
    #endregion
    #region class EfsSendFDLogin 
    /// <remarks/>
    public partial class EfsSendFDLogin
    {
        private string userName;
        private EfsSendFDPassword password;

        /// <remarks/>
        [XmlElementAttribute("UserName", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName
        {
            get
            {
                return this.userName;
            }
            set
            {
                this.userName = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute("Password", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDPassword Password
        {
            get
            {
                return this.password;
            }
            set
            {
                this.password = value;
            }
        }
    }
    #endregion
    #region class EfsSendFDPassword 
    /// <remarks/>
    public partial class EfsSendFDPassword
    {
        private EfsSendFDCryptedEnum cryptedField;
        private string value;

        /// <remarks/>
        [XmlAttributeAttribute()]
        public EfsSendFDCryptedEnum Crypted
        {
            get
            {
                return this.cryptedField;
            }
            set
            {
                this.cryptedField = value;
            }
        }

        /// <remarks/>
        [XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                this.value = value;
            }
        }
    }
    #endregion
    #region class EfsSendFDMessage 
    /// <remarks/>
    public partial class EfsSendFDMessage
    {
        #region Members 
        private EfsSendFDContact from;
        private EfsSendFDContact to;

        private EfsSendSubject subject;
        private EfsSendBody body;
        private EfsSendStream coverTemplate;
        private EfsSendStream[] attachment;
        #endregion
        #region Accessors 
        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDContact From
        {
            get
            {
                return this.from;
            }
            set
            {
                this.from = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendFDContact To
        {
            get
            {
                return this.to;
            }
            set
            {
                this.to = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendSubject Subject
        {
            get
            {
                return this.subject;
            }
            set
            {
                this.subject = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendBody Body
        {
            get
            {
                return this.body;
            }
            set
            {
                this.body = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoverTemplateSpecified;
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendStream CoverTemplate
        {
            get
            {
                return this.coverTemplate;
            }
            set
            {
                this.coverTemplate = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EfsSendStream[] Attachment
        {
            get
            {
                return this.attachment;
            }
            set
            {
                this.attachment = value;
            }
        }
        #endregion
    }
    #endregion   
    #region class EfsSendFDContact 
    /// <remarks/>
    public partial class EfsSendFDContact
    {
        #region Members 
        private string name;
        private string company;
        private string address;
        #endregion
        #region Accessors 
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified;
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                this.name = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanySpecified;
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company
        {
            get
            {
                return this.company;
            }
            set
            {
                this.company = value;
            }
        }

        /// <remarks/>
        [XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Address
        {
            get
            {
                return this.address;
            }
            set
            {
                this.address = value;
            }
        }
        #endregion
    }
    #endregion
}
