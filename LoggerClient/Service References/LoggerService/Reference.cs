//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFS.LoggerClient.LoggerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogScope", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class LogScope : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DtProcessEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DtStProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPROCESS_LField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdStProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdTRK_LField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialProcessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogScopeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubLogScopeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DtProcessEnd {
            get {
                return this.DtProcessEndField;
            }
            set {
                if ((this.DtProcessEndField.Equals(value) != true)) {
                    this.DtProcessEndField = value;
                    this.RaisePropertyChanged("DtProcessEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DtStProcess {
            get {
                return this.DtStProcessField;
            }
            set {
                if ((this.DtStProcessField.Equals(value) != true)) {
                    this.DtStProcessField = value;
                    this.RaisePropertyChanged("DtStProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPROCESS_L {
            get {
                return this.IdPROCESS_LField;
            }
            set {
                if ((this.IdPROCESS_LField.Equals(value) != true)) {
                    this.IdPROCESS_LField = value;
                    this.RaisePropertyChanged("IdPROCESS_L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdStProcess {
            get {
                return this.IdStProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.IdStProcessField, value) != true)) {
                    this.IdStProcessField = value;
                    this.RaisePropertyChanged("IdStProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTRK_L {
            get {
                return this.IdTRK_LField;
            }
            set {
                if ((this.IdTRK_LField.Equals(value) != true)) {
                    this.IdTRK_LField = value;
                    this.RaisePropertyChanged("IdTRK_L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialProcessType {
            get {
                return this.InitialProcessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialProcessTypeField, value) != true)) {
                    this.InitialProcessTypeField = value;
                    this.RaisePropertyChanged("InitialProcessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogScopeId {
            get {
                return this.LogScopeIdField;
            }
            set {
                if ((this.LogScopeIdField.Equals(value) != true)) {
                    this.LogScopeIdField = value;
                    this.RaisePropertyChanged("LogScopeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessType {
            get {
                return this.ProcessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessTypeField, value) != true)) {
                    this.ProcessTypeField = value;
                    this.RaisePropertyChanged("ProcessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubLogScopeId {
            get {
                return this.SubLogScopeIdField;
            }
            set {
                if ((this.SubLogScopeIdField.Equals(value) != true)) {
                    this.SubLogScopeIdField = value;
                    this.RaisePropertyChanged("SubLogScopeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggerData", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class LoggerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallingClassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallingMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DtUtcLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupSequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstanceIdaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.LogCategoryEnum LogCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.LogLevelEnum LogLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.LogScope LogScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OS_PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<EFS.LoggerClient.LoggerService.LogParam> ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SQL_SPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.SysMsgCode SysMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThreadIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallingClassType {
            get {
                return this.CallingClassTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallingClassTypeField, value) != true)) {
                    this.CallingClassTypeField = value;
                    this.RaisePropertyChanged("CallingClassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallingMethod {
            get {
                return this.CallingMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CallingMethodField, value) != true)) {
                    this.CallingMethodField = value;
                    this.RaisePropertyChanged("CallingMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DtUtcLog {
            get {
                return this.DtUtcLogField;
            }
            set {
                if ((this.DtUtcLogField.Equals(value) != true)) {
                    this.DtUtcLogField = value;
                    this.RaisePropertyChanged("DtUtcLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupSequenceNumber {
            get {
                return this.GroupSequenceNumberField;
            }
            set {
                if ((this.GroupSequenceNumberField.Equals(value) != true)) {
                    this.GroupSequenceNumberField = value;
                    this.RaisePropertyChanged("GroupSequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceIda {
            get {
                return this.InstanceIdaField;
            }
            set {
                if ((this.InstanceIdaField.Equals(value) != true)) {
                    this.InstanceIdaField = value;
                    this.RaisePropertyChanged("InstanceIda");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceName {
            get {
                return this.InstanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceNameField, value) != true)) {
                    this.InstanceNameField = value;
                    this.RaisePropertyChanged("InstanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceVersion {
            get {
                return this.InstanceVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceVersionField, value) != true)) {
                    this.InstanceVersionField = value;
                    this.RaisePropertyChanged("InstanceVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.LogCategoryEnum LogCategory {
            get {
                return this.LogCategoryField;
            }
            set {
                if ((this.LogCategoryField.Equals(value) != true)) {
                    this.LogCategoryField = value;
                    this.RaisePropertyChanged("LogCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.LogLevelEnum LogLevel {
            get {
                return this.LogLevelField;
            }
            set {
                if ((this.LogLevelField.Equals(value) != true)) {
                    this.LogLevelField = value;
                    this.RaisePropertyChanged("LogLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.LogScope LogScope {
            get {
                return this.LogScopeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogScopeField, value) != true)) {
                    this.LogScopeField = value;
                    this.RaisePropertyChanged("LogScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OS_PID {
            get {
                return this.OS_PIDField;
            }
            set {
                if ((this.OS_PIDField.Equals(value) != true)) {
                    this.OS_PIDField = value;
                    this.RaisePropertyChanged("OS_PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<EFS.LoggerClient.LoggerService.LogParam> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessType {
            get {
                return this.ProcessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessTypeField, value) != true)) {
                    this.ProcessTypeField = value;
                    this.RaisePropertyChanged("ProcessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RankOrder {
            get {
                return this.RankOrderField;
            }
            set {
                if ((this.RankOrderField.Equals(value) != true)) {
                    this.RankOrderField = value;
                    this.RaisePropertyChanged("RankOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SQL_SPID {
            get {
                return this.SQL_SPIDField;
            }
            set {
                if ((this.SQL_SPIDField.Equals(value) != true)) {
                    this.SQL_SPIDField = value;
                    this.RaisePropertyChanged("SQL_SPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.SysMsgCode SysMsg {
            get {
                return this.SysMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.SysMsgField, value) != true)) {
                    this.SysMsgField = value;
                    this.RaisePropertyChanged("SysMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysMsgCode", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class SysMsgCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.SysCodeEnum SysCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.SysCodeEnum SysCode {
            get {
                return this.SysCodeField;
            }
            set {
                if ((this.SysCodeField.Equals(value) != true)) {
                    this.SysCodeField = value;
                    this.RaisePropertyChanged("SysCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysNumber {
            get {
                return this.SysNumberField;
            }
            set {
                if ((this.SysNumberField.Equals(value) != true)) {
                    this.SysNumberField = value;
                    this.RaisePropertyChanged("SysNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogCategoryEnum", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    public enum LogCategoryEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingPrice = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogLevelEnum", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    public enum LogLevelEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trace = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogParam", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class LogParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DataSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReferentialIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferentialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DataSpecified {
            get {
                return this.DataSpecifiedField;
            }
            set {
                if ((this.DataSpecifiedField.Equals(value) != true)) {
                    this.DataSpecifiedField = value;
                    this.RaisePropertyChanged("DataSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InternalId {
            get {
                return this.InternalIdField;
            }
            set {
                if ((this.InternalIdField.Equals(value) != true)) {
                    this.InternalIdField = value;
                    this.RaisePropertyChanged("InternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReferentialIdentifier {
            get {
                return this.IsReferentialIdentifierField;
            }
            set {
                if ((this.IsReferentialIdentifierField.Equals(value) != true)) {
                    this.IsReferentialIdentifierField = value;
                    this.RaisePropertyChanged("IsReferentialIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referential {
            get {
                return this.ReferentialField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferentialField, value) != true)) {
                    this.ReferentialField = value;
                    this.RaisePropertyChanged("Referential");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysCodeEnum", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    public enum SysCodeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOG = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RES = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SYS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TRK = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CME = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultLoggerData", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class ResultLoggerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<EFS.LoggerClient.LoggerService.LoggerData> LogField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<EFS.LoggerClient.LoggerService.LoggerData> Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggerRequest", Namespace="http://schemas.datacontract.org/2004/07/EFS.LoggerService")]
    [System.SerializableAttribute()]
    public partial class LoggerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DtUtcLogEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DtUtcLogStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFS.LoggerClient.LoggerService.LogLevelEnum LogLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DtUtcLogEnd {
            get {
                return this.DtUtcLogEndField;
            }
            set {
                if ((this.DtUtcLogEndField.Equals(value) != true)) {
                    this.DtUtcLogEndField = value;
                    this.RaisePropertyChanged("DtUtcLogEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DtUtcLogStart {
            get {
                return this.DtUtcLogStartField;
            }
            set {
                if ((this.DtUtcLogStartField.Equals(value) != true)) {
                    this.DtUtcLogStartField = value;
                    this.RaisePropertyChanged("DtUtcLogStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFS.LoggerClient.LoggerService.LogLevelEnum LogLevel {
            get {
                return this.LogLevelField;
            }
            set {
                if ((this.LogLevelField.Equals(value) != true)) {
                    this.LogLevelField = value;
                    this.RaisePropertyChanged("LogLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessType {
            get {
                return this.ProcessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessTypeField, value) != true)) {
                    this.ProcessTypeField = value;
                    this.RaisePropertyChanged("ProcessType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoggerService.ISpheresLoggerService")]
    public interface ISpheresLoggerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/IsAlive", ReplyAction="http://tempuri.org/ISpheresLoggerService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/IsAlive", ReplyAction="http://tempuri.org/ISpheresLoggerService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/BeginScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/BeginScopeResponse")]
        void BeginScope(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/BeginScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/BeginScopeResponse")]
        System.Threading.Tasks.Task BeginScopeAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/EndScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/EndScopeResponse")]
        void EndScope(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/EndScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/EndScopeResponse")]
        System.Threading.Tasks.Task EndScopeAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLogScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLogScopeResponse")]
        EFS.LoggerClient.LoggerService.LogScope GetLogScope(string pConnexionString, int pIdProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLogScope", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLogScopeResponse")]
        System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.LogScope> GetLogScopeAsync(string pConnexionString, int pIdProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/Log", ReplyAction="http://tempuri.org/ISpheresLoggerService/LogResponse")]
        void Log(EFS.LoggerClient.LoggerService.LoggerData pData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/Log", ReplyAction="http://tempuri.org/ISpheresLoggerService/LogResponse")]
        System.Threading.Tasks.Task LogAsync(EFS.LoggerClient.LoggerService.LoggerData pData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/UpdateLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/UpdateLogLevelResponse")]
        bool UpdateLogLevel(EFS.LoggerClient.LoggerService.LoggerData pData, EFS.LoggerClient.LoggerService.LogLevelEnum pNewLogLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/UpdateLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/UpdateLogLevelResponse")]
        System.Threading.Tasks.Task<bool> UpdateLogLevelAsync(EFS.LoggerClient.LoggerService.LoggerData pData, EFS.LoggerClient.LoggerService.LogLevelEnum pNewLogLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/UpdateWithWorstLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/UpdateWithWorstLogLevelResponse")]
        bool UpdateWithWorstLogLevel(EFS.LoggerClient.LoggerService.LoggerData pDataFirst, EFS.LoggerClient.LoggerService.LoggerData pDataLast);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/UpdateWithWorstLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/UpdateWithWorstLogLevelResponse")]
        System.Threading.Tasks.Task<bool> UpdateWithWorstLogLevelAsync(EFS.LoggerClient.LoggerService.LoggerData pDataFirst, EFS.LoggerClient.LoggerService.LoggerData pDataLast);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetAutoWrite", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetAutoWriteResponse")]
        bool GetAutoWrite(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetAutoWrite", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetAutoWriteResponse")]
        System.Threading.Tasks.Task<bool> GetAutoWriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/SetAutoWrite", ReplyAction="http://tempuri.org/ISpheresLoggerService/SetAutoWriteResponse")]
        bool SetAutoWrite(EFS.LoggerClient.LoggerService.LogScope pScope, bool pAutoWrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/SetAutoWrite", ReplyAction="http://tempuri.org/ISpheresLoggerService/SetAutoWriteResponse")]
        System.Threading.Tasks.Task<bool> SetAutoWriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope, bool pAutoWrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/Write", ReplyAction="http://tempuri.org/ISpheresLoggerService/WriteResponse")]
        void Write(EFS.LoggerClient.LoggerService.LogScope pScope, bool pIsForced);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/Write", ReplyAction="http://tempuri.org/ISpheresLoggerService/WriteResponse")]
        System.Threading.Tasks.Task WriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope, bool pIsForced);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetBufferLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetBufferLogResponse")]
        EFS.LoggerClient.LoggerService.ResultLoggerData GetBufferLog(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetBufferLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetBufferLogResponse")]
        System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetBufferLogAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLastLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLastLogResponse")]
        EFS.LoggerClient.LoggerService.ResultLoggerData GetLastLog(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLastLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLastLogResponse")]
        System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetLastLogAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLogResponse")]
        EFS.LoggerClient.LoggerService.ResultLoggerData GetLog(EFS.LoggerClient.LoggerService.LoggerRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetLog", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetLogResponse")]
        System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetLogAsync(EFS.LoggerClient.LoggerService.LoggerRequest pRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetIdProcess_L", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetIdProcess_LResponse")]
        int GetIdProcess_L(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetIdProcess_L", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetIdProcess_LResponse")]
        System.Threading.Tasks.Task<int> GetIdProcess_LAsync(EFS.LoggerClient.LoggerService.LogScope pScope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetWorstLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetWorstLogLevelResponse")]
        EFS.LoggerClient.LoggerService.LogLevelEnum GetWorstLogLevel(EFS.LoggerClient.LoggerService.LogScope pScope, EFS.LoggerClient.LoggerService.LoggerData pData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpheresLoggerService/GetWorstLogLevel", ReplyAction="http://tempuri.org/ISpheresLoggerService/GetWorstLogLevelResponse")]
        System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.LogLevelEnum> GetWorstLogLevelAsync(EFS.LoggerClient.LoggerService.LogScope pScope, EFS.LoggerClient.LoggerService.LoggerData pData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpheresLoggerServiceChannel : EFS.LoggerClient.LoggerService.ISpheresLoggerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpheresLoggerServiceClient : System.ServiceModel.ClientBase<EFS.LoggerClient.LoggerService.ISpheresLoggerService>, EFS.LoggerClient.LoggerService.ISpheresLoggerService {
        
        public SpheresLoggerServiceClient() {
        }
        
        public SpheresLoggerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpheresLoggerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpheresLoggerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpheresLoggerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public void BeginScope(EFS.LoggerClient.LoggerService.LogScope pScope) {
            base.Channel.BeginScope(pScope);
        }
        
        public System.Threading.Tasks.Task BeginScopeAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.BeginScopeAsync(pScope);
        }
        
        public void EndScope(EFS.LoggerClient.LoggerService.LogScope pScope) {
            base.Channel.EndScope(pScope);
        }
        
        public System.Threading.Tasks.Task EndScopeAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.EndScopeAsync(pScope);
        }
        
        public EFS.LoggerClient.LoggerService.LogScope GetLogScope(string pConnexionString, int pIdProcess) {
            return base.Channel.GetLogScope(pConnexionString, pIdProcess);
        }
        
        public System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.LogScope> GetLogScopeAsync(string pConnexionString, int pIdProcess) {
            return base.Channel.GetLogScopeAsync(pConnexionString, pIdProcess);
        }
        
        public void Log(EFS.LoggerClient.LoggerService.LoggerData pData) {
            base.Channel.Log(pData);
        }
        
        public System.Threading.Tasks.Task LogAsync(EFS.LoggerClient.LoggerService.LoggerData pData) {
            return base.Channel.LogAsync(pData);
        }
        
        public bool UpdateLogLevel(EFS.LoggerClient.LoggerService.LoggerData pData, EFS.LoggerClient.LoggerService.LogLevelEnum pNewLogLevel) {
            return base.Channel.UpdateLogLevel(pData, pNewLogLevel);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLogLevelAsync(EFS.LoggerClient.LoggerService.LoggerData pData, EFS.LoggerClient.LoggerService.LogLevelEnum pNewLogLevel) {
            return base.Channel.UpdateLogLevelAsync(pData, pNewLogLevel);
        }
        
        public bool UpdateWithWorstLogLevel(EFS.LoggerClient.LoggerService.LoggerData pDataFirst, EFS.LoggerClient.LoggerService.LoggerData pDataLast) {
            return base.Channel.UpdateWithWorstLogLevel(pDataFirst, pDataLast);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateWithWorstLogLevelAsync(EFS.LoggerClient.LoggerService.LoggerData pDataFirst, EFS.LoggerClient.LoggerService.LoggerData pDataLast) {
            return base.Channel.UpdateWithWorstLogLevelAsync(pDataFirst, pDataLast);
        }
        
        public bool GetAutoWrite(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetAutoWrite(pScope);
        }
        
        public System.Threading.Tasks.Task<bool> GetAutoWriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetAutoWriteAsync(pScope);
        }
        
        public bool SetAutoWrite(EFS.LoggerClient.LoggerService.LogScope pScope, bool pAutoWrite) {
            return base.Channel.SetAutoWrite(pScope, pAutoWrite);
        }
        
        public System.Threading.Tasks.Task<bool> SetAutoWriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope, bool pAutoWrite) {
            return base.Channel.SetAutoWriteAsync(pScope, pAutoWrite);
        }
        
        public void Write(EFS.LoggerClient.LoggerService.LogScope pScope, bool pIsForced) {
            base.Channel.Write(pScope, pIsForced);
        }
        
        public System.Threading.Tasks.Task WriteAsync(EFS.LoggerClient.LoggerService.LogScope pScope, bool pIsForced) {
            return base.Channel.WriteAsync(pScope, pIsForced);
        }
        
        public EFS.LoggerClient.LoggerService.ResultLoggerData GetBufferLog(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetBufferLog(pScope);
        }
        
        public System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetBufferLogAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetBufferLogAsync(pScope);
        }
        
        public EFS.LoggerClient.LoggerService.ResultLoggerData GetLastLog(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetLastLog(pScope);
        }
        
        public System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetLastLogAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetLastLogAsync(pScope);
        }
        
        public EFS.LoggerClient.LoggerService.ResultLoggerData GetLog(EFS.LoggerClient.LoggerService.LoggerRequest pRequest) {
            return base.Channel.GetLog(pRequest);
        }
        
        public System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.ResultLoggerData> GetLogAsync(EFS.LoggerClient.LoggerService.LoggerRequest pRequest) {
            return base.Channel.GetLogAsync(pRequest);
        }
        
        public int GetIdProcess_L(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetIdProcess_L(pScope);
        }
        
        public System.Threading.Tasks.Task<int> GetIdProcess_LAsync(EFS.LoggerClient.LoggerService.LogScope pScope) {
            return base.Channel.GetIdProcess_LAsync(pScope);
        }
        
        public EFS.LoggerClient.LoggerService.LogLevelEnum GetWorstLogLevel(EFS.LoggerClient.LoggerService.LogScope pScope, EFS.LoggerClient.LoggerService.LoggerData pData) {
            return base.Channel.GetWorstLogLevel(pScope, pData);
        }
        
        public System.Threading.Tasks.Task<EFS.LoggerClient.LoggerService.LogLevelEnum> GetWorstLogLevelAsync(EFS.LoggerClient.LoggerService.LogScope pScope, EFS.LoggerClient.LoggerService.LoggerData pData) {
            return base.Channel.GetWorstLogLevelAsync(pScope, pData);
        }
    }
}
