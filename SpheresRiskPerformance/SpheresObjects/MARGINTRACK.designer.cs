#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34209
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFS.SpheresRiskPerformance.SpheresObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RD_SPHERES_TST260")]
	public partial class MARGINTRACKDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertMARGINTRACK(MARGINTRACK instance);
    partial void UpdateMARGINTRACK(MARGINTRACK instance);
    partial void DeleteMARGINTRACK(MARGINTRACK instance);
    #endregion
		
		public MARGINTRACKDataContext() : 
				base(global::EFS.SpheresRiskPerformance.Properties.Settings.Default.RD_SPHERES_TST260ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MARGINTRACKDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MARGINTRACKDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MARGINTRACKDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MARGINTRACKDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MARGINTRACK> MARGINTRACK
		{
			get
			{
				return this.GetTable<MARGINTRACK>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MARGINTRACK")]
	public partial class MARGINTRACK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _IDMARGINTRACK;
		
		private System.Nullable<decimal> _IDPROCESS_L;
		
		private string _MESSAGE;
		
		private System.DateTime _DTINS;
		
		private decimal _IDAINS;
		
		private string _EXTLLINK;
		
		private System.Nullable<char> _ROWATTRIBUT;
		
		private System.Data.Linq.Binary _ROWVERSION;
		
		private System.Nullable<decimal> _IDA_ENTITY;
		
		private System.Nullable<decimal> _IDA_CSS;
		
		private System.Nullable<System.DateTime> _DTBUSINESS;
		
		private string _TIMING;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMARGINTRACKChanging(decimal value);
    partial void OnIDMARGINTRACKChanged();
    partial void OnIDPROCESS_LChanging(System.Nullable<decimal> value);
    partial void OnIDPROCESS_LChanged();
    partial void OnMESSAGEChanging(string value);
    partial void OnMESSAGEChanged();
    partial void OnDTINSChanging(System.DateTime value);
    partial void OnDTINSChanged();
    partial void OnIDAINSChanging(decimal value);
    partial void OnIDAINSChanged();
    partial void OnEXTLLINKChanging(string value);
    partial void OnEXTLLINKChanged();
    partial void OnROWATTRIBUTChanging(System.Nullable<char> value);
    partial void OnROWATTRIBUTChanged();
    partial void OnROWVERSIONChanging(System.Data.Linq.Binary value);
    partial void OnROWVERSIONChanged();
    partial void OnIDA_ENTITYChanging(System.Nullable<decimal> value);
    partial void OnIDA_ENTITYChanged();
    partial void OnIDA_CSSChanging(System.Nullable<decimal> value);
    partial void OnIDA_CSSChanged();
    partial void OnDTBUSINESSChanging(System.Nullable<System.DateTime> value);
    partial void OnDTBUSINESSChanged();
    partial void OnTIMINGChanging(string value);
    partial void OnTIMINGChanged();
    #endregion
		
		public MARGINTRACK()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMARGINTRACK", AutoSync=AutoSync.OnInsert, DbType="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal IDMARGINTRACK
		{
			get
			{
				return this._IDMARGINTRACK;
			}
			set
			{
				if ((this._IDMARGINTRACK != value))
				{
					this.OnIDMARGINTRACKChanging(value);
					this.SendPropertyChanging();
					this._IDMARGINTRACK = value;
					this.SendPropertyChanged("IDMARGINTRACK");
					this.OnIDMARGINTRACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESS_L", DbType="Decimal(10,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> IDPROCESS_L
		{
			get
			{
				return this._IDPROCESS_L;
			}
			set
			{
				if ((this._IDPROCESS_L != value))
				{
					this.OnIDPROCESS_LChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESS_L = value;
					this.SendPropertyChanged("IDPROCESS_L");
					this.OnIDPROCESS_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESSAGE", DbType="VarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string MESSAGE
		{
			get
			{
				return this._MESSAGE;
			}
			set
			{
				if ((this._MESSAGE != value))
				{
					this.OnMESSAGEChanging(value);
					this.SendPropertyChanging();
					this._MESSAGE = value;
					this.SendPropertyChanged("MESSAGE");
					this.OnMESSAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTINS", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DTINS
		{
			get
			{
				return this._DTINS;
			}
			set
			{
				if ((this._DTINS != value))
				{
					this.OnDTINSChanging(value);
					this.SendPropertyChanging();
					this._DTINS = value;
					this.SendPropertyChanged("DTINS");
					this.OnDTINSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAINS", DbType="Decimal(10,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal IDAINS
		{
			get
			{
				return this._IDAINS;
			}
			set
			{
				if ((this._IDAINS != value))
				{
					this.OnIDAINSChanging(value);
					this.SendPropertyChanging();
					this._IDAINS = value;
					this.SendPropertyChanged("IDAINS");
					this.OnIDAINSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTLLINK", DbType="VarChar(128)", UpdateCheck=UpdateCheck.Never)]
		public string EXTLLINK
		{
			get
			{
				return this._EXTLLINK;
			}
			set
			{
				if ((this._EXTLLINK != value))
				{
					this.OnEXTLLINKChanging(value);
					this.SendPropertyChanging();
					this._EXTLLINK = value;
					this.SendPropertyChanged("EXTLLINK");
					this.OnEXTLLINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWATTRIBUT", DbType="Char(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> ROWATTRIBUT
		{
			get
			{
				return this._ROWATTRIBUT;
			}
			set
			{
				if ((this._ROWATTRIBUT != value))
				{
					this.OnROWATTRIBUTChanging(value);
					this.SendPropertyChanging();
					this._ROWATTRIBUT = value;
					this.SendPropertyChanged("ROWATTRIBUT");
					this.OnROWATTRIBUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWVERSION", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWVERSION
		{
			get
			{
				return this._ROWVERSION;
			}
			set
			{
				if ((this._ROWVERSION != value))
				{
					this.OnROWVERSIONChanging(value);
					this.SendPropertyChanging();
					this._ROWVERSION = value;
					this.SendPropertyChanged("ROWVERSION");
					this.OnROWVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDA_ENTITY", DbType="Decimal(10,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> IDA_ENTITY
		{
			get
			{
				return this._IDA_ENTITY;
			}
			set
			{
				if ((this._IDA_ENTITY != value))
				{
					this.OnIDA_ENTITYChanging(value);
					this.SendPropertyChanging();
					this._IDA_ENTITY = value;
					this.SendPropertyChanged("IDA_ENTITY");
					this.OnIDA_ENTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDA_CSS", DbType="Decimal(10,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> IDA_CSS
		{
			get
			{
				return this._IDA_CSS;
			}
			set
			{
				if ((this._IDA_CSS != value))
				{
					this.OnIDA_CSSChanging(value);
					this.SendPropertyChanging();
					this._IDA_CSS = value;
					this.SendPropertyChanged("IDA_CSS");
					this.OnIDA_CSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBUSINESS", DbType="DateTime NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DTBUSINESS
		{
			get
			{
				return this._DTBUSINESS;
			}
			set
			{
				if ((this._DTBUSINESS != value))
				{
					this.OnDTBUSINESSChanging(value);
					this.SendPropertyChanging();
					this._DTBUSINESS = value;
					this.SendPropertyChanged("DTBUSINESS");
					this.OnDTBUSINESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMING", DbType="Varchar(64)", UpdateCheck=UpdateCheck.Never)]
		public string TIMING
		{
			get
			{
				return this._TIMING;
			}
			set
			{
				if ((this._TIMING != value))
				{
					this.OnTIMINGChanging(value);
					this.SendPropertyChanging();
					this._TIMING = value;
					this.SendPropertyChanged("TIMING");
					this.OnTIMINGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
