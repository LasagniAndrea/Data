<?xml version="1.0" encoding="utf-8" ?>
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation ="StringDynamicData.xsd"/>
  
  <xs:element name="tradeImport" type="TradeImport">
    <xs:annotation>
      <xs:documentation xml:lang="fr">Root</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="TradeImport">
    <xs:annotation>
      <xs:documentation xml:lang="fr">
        Représente une importation de trade
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="settings" type="TradeImportSettings" >
        <xs:annotation>
          <xs:documentation xml:lang="fr">
            Définit les directives et les paramètres de l'importation
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="tradeInput" type="TradeCommonInput" >
        <xs:annotation>
          <xs:documentation xml:lang="fr">
            Contient les données à intégrer
            - les données du document FpML® (Fpml:DataDocument).
            - les status check et match à affecter au trade.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TradeImportSettings">
    <xs:annotation>
      <xs:documentation xml:lang="fr">
        Représente les directives et les paramètres de l'importation.
        </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="importMode" type="ModeEnum" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Mode d'importation (New = Création, Update = Modification,...)
            </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="user" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Utilisateur considéré pour l'importation.
            Il permet d'initialiser les statuts Check et Match s'ils sont non spécifiés.
            L'utilisateur doit posséder l'habilitation
            - "création" (Mode New)
            - "modification" (Mode Update)
            
            Non renseignée, Spheres OTCml® considère l'utilisateur qui effectue la demande de traitement.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="conditions" type="ArrayOfStringDynamicData" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Liste des conditions nécessaires pour exécuter l'importation.
            Toute condition doit être vérifiée pour exécuter l'importation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="parameters" type="ArrayOfImportParameter" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Liste des paramètres acceptés par le traitement d'importation (instrument,screen,etc...)
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="ModeEnum">
    <xs:annotation>
      <xs:documentation xml:lang="fr">
        Repésente le mode d'importation:
        - "New" pour création de trade.
        - "Update" pour modification de trade.
        - "RemoveOnly" pour annulation de trade.
        - "RemoveReplace" pour annulation de trade avec remplaçante.

        Seuls "New" et "Update" sont gérés en 2.2.0.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="New" />
      <xs:enumeration value="Update" />
      <xs:enumeration value="RemoveOnly" />
      <xs:enumeration value="RemoveReplace" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ArrayOfStringDynamicData">
    <xs:annotation>
      <xs:documentation xml:lang="fr">
        Représente une liste de StringDynamicData.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="condition"  type="StringDynamicData" >
        <xs:annotation>
          <xs:documentation xml:lang="fr">
            Elément(s) de la liste.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportParameter">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">

        Représente un paramètre de l'importation.

        Liste des valeurs possibles pour name
        http://www.efs.org/otcml/tradeImport/instrumentIdentifier  : Instrument
        http://www.efs.org/otcml/tradeImport/templateIdentifier    : Template identifier
        http://www.efs.org/otcml/tradeImport/Identifier            : Trade identifier
        http://www.efs.org/otcml/tradeImport/screen                : Ecran
        http://www.efs.org/otcml/tradeImport/displayname           : DisplayName
        http://www.efs.org/otcml/tradeImport/description           : Description
        http://www.efs.org/otcml/tradeImport/extllink              : ExtlLink
        http://www.efs.org/otcml/tradeImport/isApplyFeeCalculation : Avec calcul des courtages
        http://www.efs.org/otcml/tradeImport/isApplyPartyTemplate  : Avec utilisation des valeurs par défaut pour les trades
        http://www.efs.org/otcml/tradeImport/isPostToEventsGen     : Avec génération des évènements

        L'instrument est le seul paramètre obligatoire quel que soit le mode d'importation.
        Trade identifier est obligatoire si mode "Update".

        Un paramètre peut être valorisé via
        - une valeur ou
        - une colonne d'un resultset issu d'une command SQL (Query Select ou Procedure)
        - une l'appel d'une fonction SpheresLib
        
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="true">
      <xs:extension base="StringDynamicData" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ArrayOfImportParameter">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente une liste de paramètres de l'importation
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="parameter"  type="ImportParameter" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Représente un paramètre de l'importation
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TradeCommonInput">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente les données qui alimentent
        - les statuts Check et Match du trade (non géré pour l'instant)
        - le FpML:DataDocument
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="CommonInput">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="tradeStatus" type="TradeStatus" >
            <xs:annotation>
              <xs:documentation xml:lang ="fr">
                liste des Statuts du trade.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="customCaptureInfos" type="ArrayOfCustomCaptureInfoDynamicData" >
            <xs:annotation>
              <xs:documentation xml:lang ="fr">
                liste des données trade qui aliment le FpML:DataDocument.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CommonInput" >
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        CommonInput est vide.
        La version 2.2.0 n'intègre pas les staus Check et Match. 
        Ces statuts sont initialisés avec les status définis sur le template.
        Elles sont ensuite mise à jour en fonction du paramétrage existant dans ProcessTuning
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>
  
  <xs:complexType name="ArrayOfCustomCaptureInfoDynamicData">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente une liste de CustomCaptureInfoDynamicData.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="customCaptureInfo" type="CustomCaptureInfoDynamicData" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CustomCaptureInfoDynamicData">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente une donnée "expression" qui sera injectée le FpML:DataDocument.
        L'expression est représentée par dynamicValue de type StringDynamicData.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="CustomCaptureInfo">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="dynamicValue" type="StringDynamicData" >
            <xs:annotation>
              <xs:documentation xml:lang ="fr">
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CustomCaptureInfo">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente une donnée qui sera injectée le FpML:DataDocument.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" form="unqualified" name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            valeur de la donnée.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute form="unqualified" name="clientId" type="xs:string" >
      <xs:annotation>
        <xs:documentation xml:lang ="fr">
          Identification de l'élément du DataDocument alimenté avec cette donnée.
          Exemple :
          capFloorStream_calculationPeriodDates_effectiveDate signifie
          La date de valeur d'un trade sur le produit CapFloor.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute >

    <xs:attribute form="unqualified" name="dataType" type="TypeDataEnum" use="required" >
      <xs:annotation>
        <xs:documentation xml:lang ="fr">
          Type de la donnée.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute >
    <xs:attribute form="unqualified" name="regex" type="TypeRegex" use="optional" >
      <xs:annotation>
        <xs:documentation xml:lang ="fr">
          Caractéristique complémentaire pour valider la donnée.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute >
  </xs:complexType>

  <xs:simpleType name="TypeDataEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bool" />
      <xs:enumeration value="date" />
      <xs:enumeration value="datetime" />
      <xs:enumeration value="time" />
      <xs:enumeration value="integer" />
      <xs:enumeration value="decimal" />
      <xs:enumeration value="string" />
      <xs:enumeration value="text" />
      <!--
      <xs:enumeration value="image" />
      <xs:enumeration value="cursor" />
      <xs:enumeration value="xml" />
      <xs:enumeration value="unknown" />
      -->
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TypeRegex">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="RegexShortTime" />
      <xs:enumeration value="RegexLongTime" />
      <xs:enumeration value="RegexDate" />
      <xs:enumeration value="RegexDateTime" />
      <xs:enumeration value="RegexMonthYear" />
      <xs:enumeration value="RegexDateRelative" />
      <xs:enumeration value="RegexDateRelativeExtend" />
      <xs:enumeration value="RegexDateRelativeOffset" />
      <xs:enumeration value="RegexInteger" />
      <xs:enumeration value="RegexNegativeInteger" />
      <xs:enumeration value="RegexPositiveInteger" />
      <xs:enumeration value="RegexNonNegativeInteger" />
      <xs:enumeration value="RegexDecimal" />
      <xs:enumeration value="RegexDecimalExtend" />
      <xs:enumeration value="RegexAmount" />
      <xs:enumeration value="RegexAmountExtend" />
      <xs:enumeration value="RegexAmountSigned" />
      <xs:enumeration value="RegexAmountSignedExtend" />
      <xs:enumeration value="RegexFixedRate" />
      <xs:enumeration value="RegexFixedRateExtend" />
      <xs:enumeration value="RegexFixedRatePercent" />
      <xs:enumeration value="RegexPercent" />
      <xs:enumeration value="RegexPercentExtend" />
      <xs:enumeration value="RegexPercentFraction" />
      <xs:enumeration value="RegexFxRate" />
      <xs:enumeration value="RegexFxRateExtend" />
      <xs:enumeration value="RegexString" />
      <xs:enumeration value="RegexStringAlphaNumUpper" />
      <xs:enumeration value="RegexStringAlphaNum" />
      <xs:enumeration value="RegexRate" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="TradeStatus">
    <xs:annotation>
      <xs:documentation xml:lang ="fr">
        Représente la collection des Statuts du Trade.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="stActivation" type="StActivationEnum" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Statut Activation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="stEnvironment" type="StEnvironmentEnum" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Statut Environment.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="stBusiness" type="StBusinessEnum" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Statut Business.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="stPriority" type="StPriorityEnum" >
        <xs:annotation>
          <xs:documentation xml:lang ="fr">
            Statut Priority.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="StActivationEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REGULAR" />
      <xs:enumeration value="LOCKED" />
      <xs:enumeration value="DEACTIV" />
      <xs:enumeration value="MISSING" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StEnvironmentEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REGULAR" />
      <xs:enumeration value="SIMUL" />
      <xs:enumeration value="TEMPLATE" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StBusinessEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PRETRADE" />
      <xs:enumeration value="EXECUTED" />
      <xs:enumeration value="INTERMED" />
      <xs:enumeration value="ALLOC" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StPriorityEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REGULAR" />
      <xs:enumeration value="LOW" />
      <xs:enumeration value="HIGH" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>